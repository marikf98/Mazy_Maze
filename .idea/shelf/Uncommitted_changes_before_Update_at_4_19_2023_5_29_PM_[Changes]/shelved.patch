Index: ATP-Project-PartA/src/algorithms/search/MazeState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package algorithms.search;\r\n\r\nimport algorithms.mazeGenerators.Position;\r\n\r\npublic class MazeState extends AState\r\n{\r\n    private int row;\r\n    private int column;\r\n    private boolean m_isDiagonalMove;\r\n\r\n    public MazeState(Position location)\r\n    {\r\n        super(location.toString());\r\n        this.row = location.getRowIndex();\r\n        this.column = location.getColumnIndex();\r\n    }\r\n\r\n    public int getRow() {\r\n        return row;\r\n    }\r\n\r\n    public int getColumn() {\r\n        return column;\r\n    }\r\n\r\n    @Override\r\n    public void setDiagonalMove() {\r\n        this.m_isDiagonalMove = true;\r\n    }\r\n\r\n    @Override\r\n    public boolean getDiagonalMove() {\r\n        return this.m_isDiagonalMove;\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ATP-Project-PartA/src/algorithms/search/MazeState.java b/ATP-Project-PartA/src/algorithms/search/MazeState.java
--- a/ATP-Project-PartA/src/algorithms/search/MazeState.java	(revision a12f3368c2104f0becfe2efee7787bdfceabeb39)
+++ b/ATP-Project-PartA/src/algorithms/search/MazeState.java	(date 1681913874917)
@@ -1,6 +1,11 @@
 package algorithms.search;
 
 import algorithms.mazeGenerators.Position;
+/**this class represents a state of the maze and extends the AState class
+ * row, column - represent the location of the state on the maze
+ * m_isDiagonalMove - represent if the move to this state has been done diagonally
+ * all the other function are the constructor and the getter and setters of the class
+ * all the function in this class are getters setters and the constructor*/
 
 public class MazeState extends AState
 {
Index: ATP-Project-PartA/src/algorithms/search/SearchableMaze.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package algorithms.search;\r\n\r\nimport algorithms.mazeGenerators.Maze;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class SearchableMaze implements ISearchable{\r\n    private Maze maze;\r\n    private boolean solved = false;\r\n    private MazeState[][] visitedMatrix;\r\n    private int [][] flagMatrix;\r\n\r\n\r\n    public SearchableMaze(Maze maze) {\r\n        this.maze = maze;\r\n        this.solved = false;\r\n        visitedMatrix = new MazeState[maze.getRowsLength()][maze.getColumnsLength()];\r\n        flagMatrix = new int [maze.getRowsLength()][maze.getColumnsLength()];\r\n        for(int i = 0; i < maze.getRowsLength(); i++)\r\n        {\r\n            for(int j = 0; j < maze.getColumnsLength(); j++)\r\n            {\r\n                visitedMatrix[i][j] = new MazeState(maze.getPosition(i,j));\r\n                flagMatrix[i][j] = 0;\r\n            }\r\n        }\r\n        flagMatrix[0][0] = 1;\r\n    }\r\n\r\n    public int getRowsLength() {return this.maze.getRowsLength();}\r\n    public int getColumnsLength(){return this.maze.getColumnsLength();}\r\n    public void setUnvisited()\r\n    {\r\n        for(int i = 0; i < maze.getRowsLength(); i++)\r\n        {\r\n            for(int j = 0; j < maze.getColumnsLength(); j++)\r\n            {\r\n                if(i == 0 && j == 0)\r\n                {\r\n                    visitedMatrix[i][j].setUnVisited();\r\n                    visitedMatrix[i][j].setPrev(null);\r\n                    continue;\r\n                }\r\n                visitedMatrix[i][j].setUnVisited();\r\n                visitedMatrix[i][j].setPrev(null);\r\n                flagMatrix[i][j] = 0;\r\n\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n//    public ArrayList<AState> getAllPossibleStates(MazeState mState)\r\n    public ArrayList<AState> getAllPossibleStates(AState state)\r\n    {\r\n        MazeState mState = (MazeState) state;\r\n        ArrayList<AState> possibleMoves = new ArrayList<>();\r\n        int row = mState.getRow();\r\n        int column = mState.getColumn();\r\n        int counter = 0;\r\n\r\n\r\n        try\r\n        {\r\n            /** up **/\r\n            if(maze.getCellValue(row-1,column) == 0 && flagMatrix[row-1][column] == 0)\r\n\r\n            {\r\n                possibleMoves.add(visitedMatrix[row-1][column]);\r\n                flagMatrix[row-1][column] = 1;\r\n            }\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException ignored)\r\n        {}\r\n\r\n        /** right & up **/\r\n        try\r\n        {\r\n            /** go right and up **/\r\n            if(maze.getCellValue(row,column+1) == 0 && maze.getCellValue(row-1,column+1) == 0 && flagMatrix[row-1][column+1] == 0)\r\n\r\n            {\r\n                possibleMoves.add(visitedMatrix[row-1][column+1]);\r\n                flagMatrix[row-1][column+1] = 1;\r\n                visitedMatrix[row-1][column+1].setDiagonalMove();\r\n                counter ++;\r\n            }\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException ignored)\r\n        {}\r\n\r\n        try\r\n        {\r\n            /** go up and right **/\r\n            if(maze.getCellValue(row-1,column) == 0 && maze.getCellValue(row-1,column+1) == 0 && counter == 0 && flagMatrix[row-1][column+1] == 0)\r\n            {\r\n                possibleMoves.add(visitedMatrix[row-1][column+1]);\r\n                flagMatrix[row-1][column+1] = 1;\r\n                visitedMatrix[row-1][column+1].setDiagonalMove();\r\n            }\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException ignored)\r\n        {}\r\n        counter = 0;\r\n\r\n\r\n        try\r\n        {\r\n            /** right **/\r\n            if(maze.getCellValue(row,column+1) == 0 && flagMatrix[row][column+1] == 0)\r\n            {\r\n                possibleMoves.add(visitedMatrix[row][column+1]);\r\n                flagMatrix[row][column+1] = 1;\r\n\r\n            }\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException ignored)\r\n        {}\r\n\r\n        /** right & down **/\r\n        try\r\n        {\r\n            /** go right and down **/\r\n            if(maze.getCellValue(row,column+1) == 0 && maze.getCellValue(row+1,column+1) == 0 && flagMatrix[row+1][column+1] == 0)\r\n            {\r\n                possibleMoves.add(visitedMatrix[row+1][column+1]);\r\n                flagMatrix[row+1][column+1] = 1;\r\n                visitedMatrix[row+1][column+1].setDiagonalMove();\r\n                counter ++;\r\n            }\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException ignored)\r\n        {}\r\n\r\n        try\r\n        {\r\n            /** go down and right **/\r\n            if(maze.getCellValue(row+1,column) == 0 && maze.getCellValue(row+1,column+1) == 0 && counter == 0 && flagMatrix[row+1][column+1] == 0)\r\n            {\r\n                possibleMoves.add(visitedMatrix[row+1][column+1]);\r\n                flagMatrix[row+1][column+1] = 1;\r\n                visitedMatrix[row+1][column+1].setDiagonalMove();\r\n            }\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException ignored)\r\n        {}\r\n        counter = 0;\r\n\r\n        try\r\n        {\r\n            /** down **/\r\n            if(maze.getCellValue(row+1,column) == 0 && flagMatrix[row+1][column] == 0)\r\n            {\r\n                possibleMoves.add(visitedMatrix[row+1][column]);\r\n                flagMatrix[row+1][column] = 1;\r\n\r\n            }\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException ignored)\r\n        {}\r\n\r\n        /** left & down **/\r\n        try\r\n        {\r\n            /** go left and down **/\r\n            if(maze.getCellValue(row,column-1) == 0 && maze.getCellValue(row+1,column-1) == 0 && flagMatrix[row+1][column-1] == 0)\r\n            {\r\n                possibleMoves.add(visitedMatrix[row+1][column-1]);\r\n                flagMatrix[row+1][column-1] = 1;\r\n                visitedMatrix[row+1][column-1].setDiagonalMove();\r\n                counter ++;\r\n            }\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException ignored)\r\n        {}\r\n\r\n        try\r\n        {\r\n            /** go down and left **/\r\n            if(maze.getCellValue(row+1,column) == 0 && maze.getCellValue(row+1,column-1) == 0 && counter == 0 && flagMatrix[row+1][column-1] == 0)\r\n            {\r\n                possibleMoves.add(visitedMatrix[row+1][column-1]);\r\n                flagMatrix[row+1][column-1] = 1;\r\n                visitedMatrix[row+1][column-1].setDiagonalMove();\r\n            }\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException ignored)\r\n        {}\r\n        counter =0;\r\n\r\n\r\n\r\n        try\r\n        {\r\n            /** left **/\r\n            if(maze.getCellValue(row,column-1) == 0 && flagMatrix[row][column-1] == 0)\r\n\r\n                {\r\n                possibleMoves.add(visitedMatrix[row][column-1]);\r\n                flagMatrix[row][column-1] = 1;\r\n            }\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException ignored)\r\n        {}\r\n\r\n\r\n\r\n\r\n        /** left & up **/\r\n        try\r\n        {\r\n            /** go left and up **/\r\n            if(maze.getCellValue(row,column-1) == 0 && maze.getCellValue(row-1,column-1) == 0 && flagMatrix[row-1][column-1] == 0)\r\n\r\n            {\r\n                possibleMoves.add(visitedMatrix[row-1][column-1]);\r\n                counter ++;\r\n                flagMatrix[row-1][column-1] = 1;\r\n                visitedMatrix[row-1][column-1].setDiagonalMove();\r\n            }\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException ignored)\r\n        {}\r\n\r\n\r\n        try\r\n        {\r\n            /** go up and left **/\r\n            if(maze.getCellValue(row-1,column) == 0 && maze.getCellValue(row-1,column-1) == 0 &&  counter == 0 && flagMatrix[row-1][column-1] == 0)\r\n            {\r\n                possibleMoves.add(visitedMatrix[row-1][column-1]);\r\n                flagMatrix[row-1][column-1] = 1;\r\n                visitedMatrix[row-1][column-1].setDiagonalMove();\r\n            }\r\n        }\r\n        catch (ArrayIndexOutOfBoundsException ignored)\r\n        {}\r\n        counter =0;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n        return possibleMoves;\r\n    }\r\n\r\n    public void setSolved(boolean solved) {\r\n        this.solved = solved;\r\n    }\r\n\r\n    public boolean isSolved() {\r\n        return solved;\r\n    }\r\n\r\n    @Override\r\n    public AState getStart() {return visitedMatrix[0][0];}\r\n\r\n    @Override\r\n    public AState getGoal() {\r\n        return visitedMatrix[maze.getRowsLength()-1][maze.getColumnsLength()-1];\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ATP-Project-PartA/src/algorithms/search/SearchableMaze.java b/ATP-Project-PartA/src/algorithms/search/SearchableMaze.java
--- a/ATP-Project-PartA/src/algorithms/search/SearchableMaze.java	(revision a12f3368c2104f0becfe2efee7787bdfceabeb39)
+++ b/ATP-Project-PartA/src/algorithms/search/SearchableMaze.java	(date 1681914464226)
@@ -3,7 +3,16 @@
 import algorithms.mazeGenerators.Maze;
 
 import java.util.ArrayList;
-
+/**this is an adapter class for the maze, it receives a maze instance and creates a searchable maze instance,
+ * the class implements the ISearchable interface
+ * maze - the maze that is adapted
+ * solved - hold if the maze been solved
+ * visitedMatrix - holds all the location that where already discovered
+ * flagMatrix - a helper matrix for marking discovered nodes
+ * SearchableMaze(Maze maze) - the constructor of this class , it receives a maze to adapt and initializes all the filed
+ * setUnvisited() - this function resets all the maze after it has been searched and initializes it back to its original state
+ * getAllPossibleStates(AState state) - this function receives a state of the maze and returns a list of all the neighbours that can be reached from this state
+ * all the other function are setter and getter functions**/
 public class SearchableMaze implements ISearchable{
     private Maze maze;
     private boolean solved = false;
@@ -50,7 +59,6 @@
     }
 
 
-//    public ArrayList<AState> getAllPossibleStates(MazeState mState)
     public ArrayList<AState> getAllPossibleStates(AState state)
     {
         MazeState mState = (MazeState) state;
@@ -237,13 +245,6 @@
         {}
         counter =0;
 
-
-
-
-
-
-
-
         return possibleMoves;
     }
 
Index: ATP-Project-PartA/src/algorithms/search/Solution.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package algorithms.search;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class Solution {\r\n    private ArrayList<AState> pathToGoal;\r\n\r\n    public Solution(ArrayList<AState> pathToGoal) {\r\n        this.pathToGoal = pathToGoal;\r\n    }\r\n\r\n    public ArrayList<AState> getSolutionPath() {\r\n        return pathToGoal;\r\n    }\r\n    public void print()\r\n    {\r\n        for(AState state : this.pathToGoal)\r\n        {\r\n            System.out.println(state);\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ATP-Project-PartA/src/algorithms/search/Solution.java b/ATP-Project-PartA/src/algorithms/search/Solution.java
--- a/ATP-Project-PartA/src/algorithms/search/Solution.java	(revision a12f3368c2104f0becfe2efee7787bdfceabeb39)
+++ b/ATP-Project-PartA/src/algorithms/search/Solution.java	(date 1681914464214)
@@ -1,7 +1,11 @@
 package algorithms.search;
 
 import java.util.ArrayList;
-
+/**
+ * this class represents a solution to a search problem
+ * pathToGoal - is a list that holds all the nodes of the solution path
+ * getSolutionPath - returns the list of the solution
+ * print - prints the solution**/
 public class Solution {
     private ArrayList<AState> pathToGoal;
 
Index: ATP-Project-PartA/src/algorithms/search/AState.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package algorithms.search;\r\n\r\nimport java.util.Comparator;\r\n\r\n/**This abstract lass represents a state in the search problem. it has the location as a String, a boolean visited filled\r\n * so we can know it was searched already, and the cost of the move to this location, and the prev state that will hold the state that discovered this one **/\r\npublic abstract class AState {\r\n    private boolean visited;\r\n    private AState prev;\r\n    private int cost;\r\n    private String location;\r\n    private boolean m_isDiagonalMove;\r\n    private boolean isGoal;\r\n\r\n/** the constructor for the class**/\r\n    public AState(String location) {\r\n        this.location = location;\r\n        this.prev = null;\r\n        this.visited = false;\r\n    }\r\n\r\n//    public void setGoal(boolean goal) {\r\n//        this.isGoal = goal;\r\n//    }\r\n\r\n    /**getter function for the visited field**/\r\n    public boolean isVisited() {\r\n        return visited;\r\n    }\r\n    /** this setter lets us set that we visited this state**/\r\n    public void setVisited() {\r\n        this.visited = true;\r\n    }\r\n    /** this setter lets us reset this state**/\r\n\r\n    public void setUnVisited(){this.visited = false;}\r\n    /**getter and setter for the prev field**/\r\n    public AState getPrev() {\r\n        return prev;\r\n    }\r\n\r\n    public void setPrev(AState prev) {\r\n        if(this.prev == null)\r\n        {\r\n            this.prev = prev;\r\n        }\r\n        if(prev == null)\r\n        {\r\n            this.prev = null;\r\n        }\r\n    }\r\n    /**setter and getter for the cost field**/\r\n    public int getCost() {\r\n        return cost;\r\n    }\r\n\r\n    public void setCost(int cost) {\r\n        this.cost = cost;\r\n    }\r\n    /**getter and setter for the location field**/\r\n    public String getLocation() {\r\n        return location;\r\n    }\r\n\r\n    /**this function checks if two states are equal comparing by their location and visited field**/\r\n    public boolean equals(AState other)\r\n    {\r\n        if(this == other){return true;}\r\n\r\n        if(!(this.visited == other.isVisited()))\r\n        {\r\n            return false;\r\n        }\r\n        return this.location.equals(other.getLocation());\r\n\r\n    }\r\n\r\n    /**abstract setter and getter function for the diagonal field**/\r\n    public abstract void setDiagonalMove();\r\n    public abstract boolean getDiagonalMove();\r\n\r\n    @Override\r\n    public String toString() {\r\n        return location;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ATP-Project-PartA/src/algorithms/search/AState.java b/ATP-Project-PartA/src/algorithms/search/AState.java
--- a/ATP-Project-PartA/src/algorithms/search/AState.java	(revision a12f3368c2104f0becfe2efee7787bdfceabeb39)
+++ b/ATP-Project-PartA/src/algorithms/search/AState.java	(date 1681914464205)
@@ -19,9 +19,9 @@
         this.visited = false;
     }
 
-//    public void setGoal(boolean goal) {
-//        this.isGoal = goal;
-//    }
+    public void setGoal(boolean goal) {
+        this.isGoal = goal;
+    }
 
     /**getter function for the visited field**/
     public boolean isVisited() {
Index: ATP-Project-PartA/src/algorithms/search/BreadthFirstSearch.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package algorithms.search;\r\n\r\nimport java.util.*;\r\n\r\npublic class BreadthFirstSearch extends ASearchingAlgorithm{\r\n    public BreadthFirstSearch() {\r\n        super();\r\n        this.collection =  new LinkedList<AState>();\r\n    }\r\n\r\n    @Override\r\n    public Solution solve(ISearchable maze) {\r\n        if(maze == null)\r\n        {\r\n            System.out.println(\"You need to supply a valid searchable\");\r\n            return null;\r\n        }\r\n        AState startNode = maze.getStart();\r\n        AState goalNode = maze.getGoal();\r\n        collection.add(startNode);\r\n        AState temp = startNode;\r\n        AState prev = null;\r\n        ArrayList<AState> solution = new ArrayList<>();\r\n\r\n        while(collection.size() != 0)\r\n        {\r\n            prev = temp;\r\n\r\n            temp = ((Queue<AState>)collection).poll();\r\n            if(!temp.isVisited())\r\n            {\r\n                temp.setVisited();\r\n                numberOfNodesEvaluated++;\r\n                if(temp.equals(goalNode))\r\n                {\r\n                    goalNode.setPrev(prev);\r\n                    temp.setPrev(prev);\r\n                    break;\r\n                }\r\n\r\n                ArrayList<AState> possibleMoves = new ArrayList<>();\r\n                //delete cast***\r\n                possibleMoves = maze.getAllPossibleStates(temp);\r\n                for(AState state: possibleMoves)\r\n                {\r\n                    state.setPrev(temp);\r\n                    if(state.getDiagonalMove())\r\n                    {\r\n                        state.setCost(temp.getCost() + 15);\r\n                    }\r\n                    else\r\n                    {\r\n                        state.setCost(temp.getCost() + 10);\r\n                    }\r\n                }\r\n                collection.addAll(possibleMoves);\r\n            }\r\n        }\r\n\r\n        startNode.setPrev(null);\r\n        Solution sol = new Solution(getPath(temp));\r\n        resetMaze(maze);\r\n        return sol;\r\n    }\r\n\r\n\r\n    @Override\r\n    public String getName()\r\n    {\r\n        return \"This is Breadth first search algorithm\";\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ATP-Project-PartA/src/algorithms/search/BreadthFirstSearch.java b/ATP-Project-PartA/src/algorithms/search/BreadthFirstSearch.java
--- a/ATP-Project-PartA/src/algorithms/search/BreadthFirstSearch.java	(revision a12f3368c2104f0becfe2efee7787bdfceabeb39)
+++ b/ATP-Project-PartA/src/algorithms/search/BreadthFirstSearch.java	(date 1681914545981)
@@ -1,7 +1,7 @@
 package algorithms.search;
 
 import java.util.*;
-
+/**this is the BreadthFirstSearch class which **/
 public class BreadthFirstSearch extends ASearchingAlgorithm{
     public BreadthFirstSearch() {
         super();
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2da5225f-907e-4b23-8e6e-d618612ed3cb\" name=\"Changes\" comment=\"fix import of the astate\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/maze3D/SearchableMaze3D.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/maze3D/SearchableMaze3D.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/out/production/ATP-Project-PartA/algorithms/maze3D/SearchableMaze3D.class\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/out/production/ATP-Project-PartA/algorithms/maze3D/SearchableMaze3D.class\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2Nh8SylfmYmH1gUiz2QpXBPwWEm\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\r\n    &quot;create.test.in.the.same.root&quot;: &quot;true&quot;,\r\n    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;corretto-15&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.2&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\marik\\Documents\\GitHub\\Mazy_Maze\\ATP-Project-PartA\\src\" />\r\n      <recent name=\"C:\\Users\\marik\\Documents\\GitHub\\Mazy_Maze\" />\r\n      <recent name=\"C:\\Users\\marik\\Documents\\GitHub\\Mazy_Maze\\ATP-Project-PartA\\src\\algorithms\\mazeGenerators\" />\r\n      <recent name=\"C:\\Users\\marik\\Documents\\GitHub\\Mazy_Maze\\src\\src\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"algorithms.search\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.RunSearchOnMaze3D\">\r\n    <configuration name=\"RunMaze3DGenerator\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"test.RunMaze3DGenerator\" />\r\n      <module name=\"ATP-Project-PartA\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"RunMazeGenerator\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"test.RunMazeGenerator\" />\r\n      <module name=\"ATP-Project-PartA\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"RunSearchOnMaze\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"test.RunSearchOnMaze\" />\r\n      <module name=\"ATP-Project-PartA\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"RunSearchOnMaze3D\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"test.RunSearchOnMaze3D\" />\r\n      <module name=\"ATP-Project-PartA\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BestFirstSearchTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ATP-Project-PartA\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"algorithms.search.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"algorithms.search\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"algorithms.search.BestFirstSearchTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.RunSearchOnMaze3D\" />\r\n        <item itemvalue=\"Application.RunMaze3DGenerator\" />\r\n        <item itemvalue=\"Application.RunMazeGenerator\" />\r\n        <item itemvalue=\"Application.RunSearchOnMaze\" />\r\n        <item itemvalue=\"JUnit.BestFirstSearchTest\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2da5225f-907e-4b23-8e6e-d618612ed3cb\" name=\"Changes\" comment=\"\" />\r\n      <created>1680104956306</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1680104956306</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"dfghj\">\r\n      <created>1680107665434</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680107665434</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"dfghj\">\r\n      <created>1680108497879</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680108497879</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"working maze\">\r\n      <created>1680429466608</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680429466608</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"working random maze\">\r\n      <created>1680447083724</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680447083724</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"started working on search algorithms\">\r\n      <created>1680536656744</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680536656744</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Working BFS and DFS\">\r\n      <created>1680709188728</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680709188728</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Working BFS and DFS and BEST\">\r\n      <created>1680806447343</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680806447343</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Fixed some bugs. all the moodle test are successful\">\r\n      <created>1680879863896</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680879863896</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"added kruskal\">\r\n      <created>1681140974702</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681140974702</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"working generator , need to fix searcher\">\r\n      <created>1681409231289</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681409231289</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"finished tests and 2d generation and solvers\">\r\n      <created>1681472508208</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681472508208</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"finished tests and 2d generation and solvers\">\r\n      <created>1681566807881</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681566807881</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"finished tests and 2d generation and solvers\">\r\n      <created>1681584339363</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681584339363</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Fixes Isearchable interface\">\r\n      <created>1681735586575</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681735586575</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"Fixes Isearchable interface\">\r\n      <created>1681736828406</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681736828406</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"Fixes Isearchable interface\">\r\n      <created>1681737159089</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681737159089</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"fixed input check\">\r\n      <created>1681816281835</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681816281835</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"fix import of the astate\">\r\n      <created>1681897826604</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681897826604</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"fix import of the astate\">\r\n      <created>1681898238049</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681898238049</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"20\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"dfghj\" />\r\n    <MESSAGE value=\"working maze\" />\r\n    <MESSAGE value=\"working random maze\" />\r\n    <MESSAGE value=\"started working on search algorithms\" />\r\n    <MESSAGE value=\"Working BFS and DFS\" />\r\n    <MESSAGE value=\"Working BFS and DFS and BEST\" />\r\n    <MESSAGE value=\"Fixed some bugs. all the moodle test are successful\" />\r\n    <MESSAGE value=\"added kruskal\" />\r\n    <MESSAGE value=\"working generator , need to fix searcher\" />\r\n    <MESSAGE value=\"finished tests and 2d generation and solvers\" />\r\n    <MESSAGE value=\"Fixes Isearchable interface\" />\r\n    <MESSAGE value=\"fixed input check\" />\r\n    <MESSAGE value=\"fix import of the astate\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"fix import of the astate\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/SearchableMaze.java</url>\r\n          <line>246</line>\r\n          <option name=\"timeStamp\" value=\"61\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/MazeState.java</url>\r\n          <line>35</line>\r\n          <option name=\"timeStamp\" value=\"88\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/mazeGenerators/MyMazeGenerator.java</url>\r\n          <line>46</line>\r\n          <option name=\"timeStamp\" value=\"180\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/mazeGenerators/MyMazeGenerator.java</url>\r\n          <line>66</line>\r\n          <option name=\"timeStamp\" value=\"181\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/JUnit/algorithms/search/BestFirstSearchTest.java</url>\r\n          <line>52</line>\r\n          <option name=\"timeStamp\" value=\"206\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/test/RunMaze3DGenerator.java</url>\r\n          <line>15</line>\r\n          <option name=\"timeStamp\" value=\"207\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/SearchableMaze.java</url>\r\n          <line>43</line>\r\n          <option name=\"timeStamp\" value=\"230\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/test/RunSearchOnMaze3D.java</url>\r\n          <line>19</line>\r\n          <option name=\"timeStamp\" value=\"231\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/DepthFirstSearch.java</url>\r\n          <line>43</line>\r\n          <option name=\"timeStamp\" value=\"232\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/DepthFirstSearch.java</url>\r\n          <line>36</line>\r\n          <option name=\"timeStamp\" value=\"233\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision a12f3368c2104f0becfe2efee7787bdfceabeb39)
+++ b/.idea/workspace.xml	(date 1681914464639)
@@ -5,9 +5,17 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="2da5225f-907e-4b23-8e6e-d618612ed3cb" name="Changes" comment="fix import of the astate">
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_04_2023_16_07__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_04_2023_16_07__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_04_2023_23_06__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_17_04_2023_23_06__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_04_2023_19_42__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_04_2023_19_42__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_04_2023_19_43__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_18_04_2023_19_43__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_2023_11_02__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_2023_11_02__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_2023_12_49__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_19_04_2023_12_49__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/maze3D/SearchableMaze3D.java" beforeDir="false" afterPath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/maze3D/SearchableMaze3D.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/out/production/ATP-Project-PartA/algorithms/maze3D/SearchableMaze3D.class" beforeDir="false" afterPath="$PROJECT_DIR$/out/production/ATP-Project-PartA/algorithms/maze3D/SearchableMaze3D.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/AState.java" beforeDir="false" afterPath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/AState.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/MazeState.java" beforeDir="false" afterPath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/MazeState.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/SearchableMaze.java" beforeDir="false" afterPath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/SearchableMaze.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/Solution.java" beforeDir="false" afterPath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/Solution.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -320,14 +328,9 @@
   <component name="XDebuggerManager">
     <breakpoint-manager>
       <breakpoints>
-        <line-breakpoint type="java-line">
-          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/SearchableMaze.java</url>
-          <line>246</line>
-          <option name="timeStamp" value="61" />
-        </line-breakpoint>
         <line-breakpoint type="java-line">
           <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/MazeState.java</url>
-          <line>35</line>
+          <line>37</line>
           <option name="timeStamp" value="88" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
@@ -349,11 +352,6 @@
           <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/test/RunMaze3DGenerator.java</url>
           <line>15</line>
           <option name="timeStamp" value="207" />
-        </line-breakpoint>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/SearchableMaze.java</url>
-          <line>43</line>
-          <option name="timeStamp" value="230" />
         </line-breakpoint>
         <line-breakpoint enabled="true" type="java-line">
           <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/test/RunSearchOnMaze3D.java</url>
