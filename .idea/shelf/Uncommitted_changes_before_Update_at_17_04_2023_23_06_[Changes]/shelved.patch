Index: ATP-Project-PartA/src/algorithms/search/ASearchingAlgorithm.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package algorithms.search;\r\n\r\nimport java.util.*;\r\n\r\npublic abstract class ASearchingAlgorithm implements ISearchingAlgorithm {\r\n    protected int numberOfNodesEvaluated;\r\n    protected Collection<AState> collection;\r\n\r\n    public ASearchingAlgorithm() {\r\n        this.numberOfNodesEvaluated = 0;\r\n        this.collection = new PriorityQueue<>();\r\n    }\r\n    public abstract Solution solve(ISearchable searchable);\r\n\r\n    public int getNumberOfNodesEvaluated (){return numberOfNodesEvaluated;}\r\n\r\n    public ArrayList<AState> getPath(AState endState)\r\n    {\r\n        ArrayList<AState> solution = new ArrayList<>();\r\n        while(endState != null)\r\n        {\r\n            solution.add(endState);\r\n            endState = endState.getPrev();\r\n        }\r\n        Collections.reverse(solution);\r\n        return solution;\r\n    }\r\n\r\n    public void resetMaze(ISearchable maze)\r\n    {\r\n        ((SearchableMaze) maze).setUnvisited();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ATP-Project-PartA/src/algorithms/search/ASearchingAlgorithm.java b/ATP-Project-PartA/src/algorithms/search/ASearchingAlgorithm.java
--- a/ATP-Project-PartA/src/algorithms/search/ASearchingAlgorithm.java	(revision c8acc8f8881851ef8fd5417e809807815030cefa)
+++ b/ATP-Project-PartA/src/algorithms/search/ASearchingAlgorithm.java	(date 1681736867565)
@@ -28,6 +28,6 @@
 
     public void resetMaze(ISearchable maze)
     {
-        ((SearchableMaze) maze).setUnvisited();
+        maze.setUnvisited();
     }
 }
Index: ATP-Project-PartA/src/algorithms/search/BreadthFirstSearch.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package algorithms.search;\r\n\r\nimport java.util.*;\r\n\r\npublic class BreadthFirstSearch extends ASearchingAlgorithm{\r\n    public BreadthFirstSearch() {\r\n        super();\r\n        this.collection =  new LinkedList<AState>();\r\n    }\r\n\r\n    @Override\r\n    public Solution solve(ISearchable maze) {\r\n        if(maze == null)\r\n        {\r\n            System.out.println(\"You need to supply a valid searchable\");\r\n            return null;\r\n        }\r\n        AState startNode = maze.getStart();\r\n        AState goalNode = maze.getGoal();\r\n        collection.add(startNode);\r\n        AState temp = startNode;\r\n        AState prev = null;\r\n        ArrayList<AState> solution = new ArrayList<>();\r\n\r\n        while(collection.size() != 0)\r\n        {\r\n            prev = temp;\r\n\r\n            temp = ((Queue<AState>)collection).poll();\r\n            if(!temp.isVisited())\r\n            {\r\n                temp.setVisited();\r\n                numberOfNodesEvaluated++;\r\n                if(temp.equals(goalNode))\r\n                {\r\n                    goalNode.setPrev(prev);\r\n                    temp.setPrev(prev);\r\n                    break;\r\n                }\r\n\r\n                ArrayList<AState> possibleMoves = new ArrayList<>();\r\n                possibleMoves = maze.getAllPossibleStates((MazeState) temp);\r\n                for(AState state: possibleMoves)\r\n                {\r\n                    state.setPrev(temp);\r\n                    if(state.getDiagonalMove())\r\n                    {\r\n                        state.setCost(temp.getCost() + 15);\r\n                    }\r\n                    else\r\n                    {\r\n                        state.setCost(temp.getCost() + 10);\r\n                    }\r\n                }\r\n                collection.addAll(possibleMoves);\r\n            }\r\n        }\r\n\r\n        startNode.setPrev(null);\r\n        Solution sol = new Solution(getPath(temp));\r\n        resetMaze(maze);\r\n        return sol;\r\n    }\r\n\r\n\r\n    @Override\r\n    public String getName()\r\n    {\r\n        return \"This is Breadth first search algorithm\";\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ATP-Project-PartA/src/algorithms/search/BreadthFirstSearch.java b/ATP-Project-PartA/src/algorithms/search/BreadthFirstSearch.java
--- a/ATP-Project-PartA/src/algorithms/search/BreadthFirstSearch.java	(revision c8acc8f8881851ef8fd5417e809807815030cefa)
+++ b/ATP-Project-PartA/src/algorithms/search/BreadthFirstSearch.java	(date 1681736843573)
@@ -39,7 +39,7 @@
                 }
 
                 ArrayList<AState> possibleMoves = new ArrayList<>();
-                possibleMoves = maze.getAllPossibleStates((MazeState) temp);
+                possibleMoves = maze.getAllPossibleStates((AState) temp);
                 for(AState state: possibleMoves)
                 {
                     state.setPrev(temp);
Index: ATP-Project-PartA/src/algorithms/maze3D/SearchableMaze3D.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package algorithms.maze3D;\r\n\r\nimport algorithms.mazeGenerators.Maze;\r\nimport algorithms.search.AState;\r\nimport algorithms.search.ISearchable;\r\nimport algorithms.search.MazeState;\r\n\r\nimport java.util.ArrayList;\r\n\r\n\r\n\r\nimport algorithms.mazeGenerators.Maze;\r\n\r\nimport java.util.ArrayList;\r\n\r\npublic class SearchableMaze3D implements ISearchable {\r\n        private Maze3D maze;\r\n        private boolean solved = false;\r\n        private Maze3DState[][][] visitedMatrix;\r\n        private int [][][] flagMatrix;\r\n\r\n\r\n        public SearchableMaze3D(Maze3D maze) {\r\n            this.maze = maze;\r\n            this.solved = false;\r\n            visitedMatrix = new Maze3DState[maze.getMaze().length][maze.getMaze()[0].length][maze.getMaze()[0][0].length];\r\n            flagMatrix = new int [maze.getMaze().length][maze.getMaze()[0].length][maze.getMaze()[0][0].length];\r\n            for(int i = 0; i < maze.getMaze().length; i++)\r\n            {\r\n                for(int j = 0; j < maze.getMaze()[0].length; j++)\r\n                {\r\n                    for(int z=0;z<maze.getMaze()[0][0].length;z++) {\r\n                        visitedMatrix[i][j][z] = new Maze3DState(maze.getPosition3D(i, j, z));\r\n                        flagMatrix[i][j][z] = 0;\r\n                    }\r\n                }\r\n            }\r\n            flagMatrix[0][0][0] = 1;\r\n        }\r\n\r\n        public int getRowsLength() {return this.maze.getMaze().length;}\r\n        public int getColumnsLength(){return this.maze.getMaze()[0].length;}\r\n        public int getDepthLength(){return this.maze.getMaze()[0][0].length;}\r\n        public void setUnvisited()\r\n        {\r\n            for(int i = 0; i < maze.getMaze().length; i++)\r\n            {\r\n                for(int j = 0; j < maze.getMaze()[0].length; j++) {\r\n                    for (int z = 0; z < maze.getMaze()[0][0].length; z++) {\r\n                        if (i == 0 && j == 0 && z==0) {\r\n                            visitedMatrix[i][j][z].setUnVisited();\r\n                            visitedMatrix[i][j][z].setPrev(null);\r\n                            continue;\r\n                        }\r\n                        visitedMatrix[i][j][z].setUnVisited();\r\n                        visitedMatrix[i][j][z].setPrev(null);\r\n                        flagMatrix[i][j][z] = 0;\r\n\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        @Override\r\n        public ArrayList<AState> getAllPossibleStates(AState state)\r\n        {\r\n            Maze3DState mState = (Maze3DState) state;\r\n            ArrayList<AState> possibleMoves = new ArrayList<>();\r\n            int row = mState.getRow();\r\n            int column = mState.getColumn();\r\n            int depth =mState.getDepth();\r\n            int counter = 0;\r\n\r\n            try\r\n            {\r\n                /** down **/\r\n                if(maze.getCellValue(row+1,column,depth) == 0 && flagMatrix[row+1][column][depth] == 0)\r\n                {\r\n                    possibleMoves.add(visitedMatrix[row+1][column][depth]);\r\n                    flagMatrix[row+1][column][depth] = 1;\r\n\r\n                }\r\n            }\r\n            catch (ArrayIndexOutOfBoundsException ignored)\r\n            {}\r\n\r\n            try\r\n            {\r\n                /** up **/\r\n                if(maze.getCellValue(row-1,column,depth) == 0 && flagMatrix[row-1][column][depth] == 0)\r\n\r\n                {\r\n                    possibleMoves.add(visitedMatrix[row-1][column][depth]);\r\n                    flagMatrix[row-1][column][depth] = 1;\r\n                }\r\n            }\r\n            catch (ArrayIndexOutOfBoundsException ignored)\r\n            {}\r\n\r\n            try\r\n            {\r\n                /** left **/\r\n                if(maze.getCellValue(row,column-1,depth) == 0 && flagMatrix[row][column-1][depth] == 0)\r\n\r\n                {\r\n                    possibleMoves.add(visitedMatrix[row][column-1][depth]);\r\n                    flagMatrix[row][column-1][depth] = 1;\r\n                }\r\n            }\r\n            catch (ArrayIndexOutOfBoundsException ignored)\r\n            {}\r\n\r\n            try\r\n            {\r\n                /** right **/\r\n                if(maze.getCellValue(row,column+1,depth) == 0 && flagMatrix[row][column+1][depth] == 0)\r\n                {\r\n                    possibleMoves.add(visitedMatrix[row][column+1][depth]);\r\n                    flagMatrix[row][column+1][depth] = 1;\r\n\r\n                }\r\n\r\n            }\r\n            catch (ArrayIndexOutOfBoundsException ignored)\r\n            {}\r\n            try\r\n            {\r\n                /** up **/\r\n                if (maze.getCellValue(row, column + 1, depth) == 0 && flagMatrix[row][column][depth + 1] == 0) {\r\n                    possibleMoves.add(visitedMatrix[row][column][depth + 1]);\r\n                    flagMatrix[row][column][depth + 1] = 1;\r\n\r\n                }\r\n            }\r\n            catch (ArrayIndexOutOfBoundsException ignored)\r\n            {}\r\n            try\r\n            {\r\n                /** down **/\r\n                if (maze.getCellValue(row, column + 1, depth) == 0 && flagMatrix[row][column][depth - 1] == 0) {\r\n                    possibleMoves.add(visitedMatrix[row][column][depth - 1]);\r\n                    flagMatrix[row][column][depth - 1] = 1;\r\n\r\n                }\r\n            }\r\n            catch (ArrayIndexOutOfBoundsException ignored)\r\n            {}\r\n\r\n\r\n\r\n\r\n            return possibleMoves;\r\n        }\r\n\r\n        public void setSolved(boolean solved) {\r\n            this.solved = solved;\r\n        }\r\n\r\n        public boolean isSolved() {\r\n            return solved;\r\n        }\r\n\r\n        @Override\r\n        public AState getStart() {return visitedMatrix[0][0][0];}\r\n\r\n        @Override\r\n        public AState getGoal() {\r\n            return visitedMatrix[maze.getMaze().length-1][maze.getMaze()[0].length][0];\r\n        }\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ATP-Project-PartA/src/algorithms/maze3D/SearchableMaze3D.java b/ATP-Project-PartA/src/algorithms/maze3D/SearchableMaze3D.java
--- a/ATP-Project-PartA/src/algorithms/maze3D/SearchableMaze3D.java	(revision c8acc8f8881851ef8fd5417e809807815030cefa)
+++ b/ATP-Project-PartA/src/algorithms/maze3D/SearchableMaze3D.java	(date 1681737032631)
@@ -151,7 +151,12 @@
             return possibleMoves;
         }
 
-        public void setSolved(boolean solved) {
+    @Override
+    public void resetMaze(ISearchable maze) {
+
+    }
+
+    public void setSolved(boolean solved) {
             this.solved = solved;
         }
 
@@ -164,8 +169,10 @@
 
         @Override
         public AState getGoal() {
-            return visitedMatrix[maze.getMaze().length-1][maze.getMaze()[0].length][0];
+            return visitedMatrix[maze.getMaze().length-1][maze.getMaze()[0].length-1][0];
         }
+        @Override
+
 
 
     }
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"2da5225f-907e-4b23-8e6e-d618612ed3cb\" name=\"Changes\" comment=\"Fixes Isearchable interface\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"JUnit5 Test Class\" />\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2Nh8SylfmYmH1gUiz2QpXBPwWEm\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Downloaded.Files.Path.Enabled&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Annotations&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.JavaDocs&quot;: &quot;false&quot;,\r\n    &quot;Repository.Attach.Sources&quot;: &quot;false&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrary&quot;: &quot;JUnit5&quot;,\r\n    &quot;com.intellij.testIntegration.createTest.CreateTestDialog.defaultLibrarySuperClass.JUnit5&quot;: &quot;&quot;,\r\n    &quot;create.test.in.the.same.root&quot;: &quot;true&quot;,\r\n    &quot;jdk.selected.JAVA_MODULE&quot;: &quot;corretto-15&quot;,\r\n    &quot;project.structure.last.edited&quot;: &quot;Modules&quot;,\r\n    &quot;project.structure.proportion&quot;: &quot;0.0&quot;,\r\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\marik\\Documents\\GitHub\\Mazy_Maze\\ATP-Project-PartA\\src\" />\r\n      <recent name=\"C:\\Users\\marik\\Documents\\GitHub\\Mazy_Maze\" />\r\n      <recent name=\"C:\\Users\\marik\\Documents\\GitHub\\Mazy_Maze\\ATP-Project-PartA\\src\\algorithms\\mazeGenerators\" />\r\n      <recent name=\"C:\\Users\\marik\\Documents\\GitHub\\Mazy_Maze\\src\\src\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.Recents.Supers\">\r\n      <recent name=\"\" />\r\n    </key>\r\n    <key name=\"CreateTestDialog.RecentsKey\">\r\n      <recent name=\"algorithms.search\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.RunSearchOnMaze\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"ATP-Project-PartA\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"RunMaze3DGenerator\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"test.RunMaze3DGenerator\" />\r\n      <module name=\"ATP-Project-PartA\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"RunSearchOnMaze\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"test.RunSearchOnMaze\" />\r\n      <module name=\"ATP-Project-PartA\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"test.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BestFirstSearchTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ATP-Project-PartA\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"algorithms.search.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"algorithms.search\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"algorithms.search.BestFirstSearchTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"BestFirstSearchTest.testLessNodesThenBFS\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"ATP-Project-PartA\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"algorithms.search.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"algorithms.search\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"algorithms.search.BestFirstSearchTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"testLessNodesThenBFS\" />\r\n      <option name=\"TEST_OBJECT\" value=\"method\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.RunSearchOnMaze\" />\r\n        <item itemvalue=\"JUnit.BestFirstSearchTest\" />\r\n        <item itemvalue=\"Application.RunMaze3DGenerator\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"JUnit.BestFirstSearchTest.testLessNodesThenBFS\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"2da5225f-907e-4b23-8e6e-d618612ed3cb\" name=\"Changes\" comment=\"\" />\r\n      <created>1680104956306</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1680104956306</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"dfghj\">\r\n      <created>1680107665434</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680107665434</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"dfghj\">\r\n      <created>1680108497879</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680108497879</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"working maze\">\r\n      <created>1680429466608</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680429466608</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"working random maze\">\r\n      <created>1680447083724</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680447083724</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"started working on search algorithms\">\r\n      <created>1680536656744</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680536656744</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Working BFS and DFS\">\r\n      <created>1680709188728</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680709188728</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Working BFS and DFS and BEST\">\r\n      <created>1680806447343</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680806447343</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Fixed some bugs. all the moodle test are successful\">\r\n      <created>1680879863896</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1680879863896</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"added kruskal\">\r\n      <created>1681140974702</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681140974702</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"working generator , need to fix searcher\">\r\n      <created>1681409231289</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681409231289</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"finished tests and 2d generation and solvers\">\r\n      <created>1681472508208</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681472508208</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"finished tests and 2d generation and solvers\">\r\n      <created>1681566807881</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681566807881</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"finished tests and 2d generation and solvers\">\r\n      <created>1681584339363</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681584339363</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"Fixes Isearchable interface\">\r\n      <created>1681735586575</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1681735586575</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"15\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"dfghj\" />\r\n    <MESSAGE value=\"working maze\" />\r\n    <MESSAGE value=\"working random maze\" />\r\n    <MESSAGE value=\"started working on search algorithms\" />\r\n    <MESSAGE value=\"Working BFS and DFS\" />\r\n    <MESSAGE value=\"Working BFS and DFS and BEST\" />\r\n    <MESSAGE value=\"Fixed some bugs. all the moodle test are successful\" />\r\n    <MESSAGE value=\"added kruskal\" />\r\n    <MESSAGE value=\"working generator , need to fix searcher\" />\r\n    <MESSAGE value=\"finished tests and 2d generation and solvers\" />\r\n    <MESSAGE value=\"Fixes Isearchable interface\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Fixes Isearchable interface\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/SearchableMaze.java</url>\r\n          <line>233</line>\r\n          <option name=\"timeStamp\" value=\"61\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/MazeState.java</url>\r\n          <line>35</line>\r\n          <option name=\"timeStamp\" value=\"88\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/test/RunSearchOnMaze.java</url>\r\n          <line>12</line>\r\n          <option name=\"timeStamp\" value=\"129\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/test/RunSearchOnMaze.java</url>\r\n          <line>13</line>\r\n          <option name=\"timeStamp\" value=\"147\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/mazeGenerators/MyMazeGenerator.java</url>\r\n          <line>46</line>\r\n          <option name=\"timeStamp\" value=\"180\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/mazeGenerators/MyMazeGenerator.java</url>\r\n          <line>66</line>\r\n          <option name=\"timeStamp\" value=\"181\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/JUnit/algorithms/search/BestFirstSearchTest.java</url>\r\n          <line>52</line>\r\n          <option name=\"timeStamp\" value=\"206\" />\r\n        </line-breakpoint>\r\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\r\n          <url>file://$PROJECT_DIR$/ATP-Project-PartA/src/test/RunMaze3DGenerator.java</url>\r\n          <line>15</line>\r\n          <option name=\"timeStamp\" value=\"207\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n    <watches-manager>\r\n      <configuration name=\"Application\">\r\n        <watch expression=\"((MazeState)temp).isGoal\" custom=\"algorithms.search.MazeState\" />\r\n        <watch expression=\"temp\" />\r\n        <watch expression=\"possibleMoves.get(1)\" />\r\n        <watch expression=\"edges\" />\r\n        <watch expression=\"((MyMaze3DGenerator)mazeGenerator).rand\" custom=\"algorithms.maze3D.MyMaze3DGenerator\" />\r\n      </configuration>\r\n    </watches-manager>\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision c8acc8f8881851ef8fd5417e809807815030cefa)
+++ b/.idea/workspace.xml	(date 1681761971911)
@@ -4,8 +4,20 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="2da5225f-907e-4b23-8e6e-d618612ed3cb" name="Changes" comment="Fixes Isearchable interface">
+    <list default="true" id="2da5225f-907e-4b23-8e6e-d618612ed3cb" name="Changes" comment="finished tests and 2d generation and solvers">
+      <change afterPath="$PROJECT_DIR$/ATP-Project-PartA/src/test/RunSearchOnMaze3D.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/maze3D/IMazeGenerator3D.java" beforeDir="false" afterPath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/maze3D/IMazeGenerator3D.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/maze3D/SearchableMaze3D.java" beforeDir="false" afterPath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/maze3D/SearchableMaze3D.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/ASearchingAlgorithm.java" beforeDir="false" afterPath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/ASearchingAlgorithm.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/BreadthFirstSearch.java" beforeDir="false" afterPath="$PROJECT_DIR$/ATP-Project-PartA/src/algorithms/search/BreadthFirstSearch.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/ATP-Project-PartA/algorithms/maze3D/AState.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/ATP-Project-PartA/algorithms/maze3D/IMazeGenerator3D.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/ATP-Project-PartA/algorithms/maze3D/ISearchable.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/ATP-Project-PartA/algorithms/maze3D/SearchableMaze3D.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/ATP-Project-PartA/algorithms/search/ASearchingAlgorithm.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/ATP-Project-PartA/algorithms/search/BreadthFirstSearch.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/out/production/ATP-Project-PartA/algorithms/search/ISearchable.class" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -65,7 +77,7 @@
       <recent name="algorithms.search" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.RunSearchOnMaze">
+  <component name="RunManager" selected="JUnit.BestFirstSearchTest">
     <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="Main" />
       <module name="ATP-Project-PartA" />
@@ -132,8 +144,8 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Application.RunSearchOnMaze" />
         <item itemvalue="JUnit.BestFirstSearchTest" />
+        <item itemvalue="Application.RunSearchOnMaze" />
         <item itemvalue="Application.RunMaze3DGenerator" />
         <item itemvalue="Application.Main" />
         <item itemvalue="JUnit.BestFirstSearchTest.testLessNodesThenBFS" />
@@ -240,14 +252,7 @@
       <option name="project" value="LOCAL" />
       <updated>1681584339363</updated>
     </task>
-    <task id="LOCAL-00014" summary="Fixes Isearchable interface">
-      <created>1681735586575</created>
-      <option name="number" value="00014" />
-      <option name="presentableId" value="LOCAL-00014" />
-      <option name="project" value="LOCAL" />
-      <updated>1681735586575</updated>
-    </task>
-    <option name="localTasksCounter" value="15" />
+    <option name="localTasksCounter" value="14" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -272,8 +277,7 @@
     <MESSAGE value="added kruskal" />
     <MESSAGE value="working generator , need to fix searcher" />
     <MESSAGE value="finished tests and 2d generation and solvers" />
-    <MESSAGE value="Fixes Isearchable interface" />
-    <option name="LAST_COMMIT_MESSAGE" value="Fixes Isearchable interface" />
+    <option name="LAST_COMMIT_MESSAGE" value="finished tests and 2d generation and solvers" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: ATP-Project-PartA/src/algorithms/maze3D/IMazeGenerator3D.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package algorithms.maze3D;\r\n\r\npublic interface IMazeGenerator3D {\r\n    Maze3D generate(int depth, int row, int column);\r\n    long measureAlgorithmTimeMillis( int row, int column,int depth);\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ATP-Project-PartA/src/algorithms/maze3D/IMazeGenerator3D.java b/ATP-Project-PartA/src/algorithms/maze3D/IMazeGenerator3D.java
--- a/ATP-Project-PartA/src/algorithms/maze3D/IMazeGenerator3D.java	(revision c8acc8f8881851ef8fd5417e809807815030cefa)
+++ b/ATP-Project-PartA/src/algorithms/maze3D/IMazeGenerator3D.java	(date 1681736843593)
@@ -1,6 +1,6 @@
 package algorithms.maze3D;
 
 public interface IMazeGenerator3D {
-    Maze3D generate(int depth, int row, int column);
+    Maze3D generate( int row, int column,int depth);
     long measureAlgorithmTimeMillis( int row, int column,int depth);
 }
Index: ATP-Project-PartA/src/test/RunSearchOnMaze3D.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/ATP-Project-PartA/src/test/RunSearchOnMaze3D.java b/ATP-Project-PartA/src/test/RunSearchOnMaze3D.java
new file mode 100644
--- /dev/null	(date 1681736847167)
+++ b/ATP-Project-PartA/src/test/RunSearchOnMaze3D.java	(date 1681736847167)
@@ -0,0 +1,35 @@
+package test;
+
+import algorithms.maze3D.IMazeGenerator3D;
+import algorithms.maze3D.Maze3D;
+import algorithms.maze3D.MyMaze3DGenerator;
+import algorithms.maze3D.SearchableMaze3D;
+import algorithms.mazeGenerators.IMazeGenerator;
+import algorithms.mazeGenerators.Maze;
+import algorithms.mazeGenerators.MyMazeGenerator;
+import algorithms.search.*;
+
+import java.util.ArrayList;
+
+public class RunSearchOnMaze3D {
+    public static void main(String[] args) {
+        IMazeGenerator3D mg = new MyMaze3DGenerator();
+        Maze3D maze = mg.generate(100, 100,100);
+        SearchableMaze3D searchableMaze = new SearchableMaze3D(maze);
+        solveProblem(searchableMaze, new BreadthFirstSearch());
+        solveProblem(searchableMaze, new DepthFirstSearch());
+        solveProblem(searchableMaze, new BestFirstSearch());
+    }
+    private static void solveProblem(ISearchable domain, ISearchingAlgorithm searcher) {
+//Solve a searching problem with a searcher
+        Solution solution = searcher.solve(domain);
+        System.out.println(String.format("'%s' algorithm - nodes evaluated: %s", searcher.getName(), searcher.getNumberOfNodesEvaluated()));
+//Printing Solution Path
+        System.out.println("Solution path:");
+        ArrayList<AState> solutionPath = solution.getSolutionPath();
+        for (int i = 0; i < solutionPath.size(); i++) {
+            System.out.println(String.format("%s. %s",i,solutionPath.get(i)));
+        }
+    }
+}
+
